library(dplyr)
data("my_gapminder")
data("my_penguins")
cv_error <- matrix(NA, nrow = 90, ncol = 2)
cv_error[, 1] <- rep(c(2, 5, 10), each = 30)
row <- 1
for(k in c(2, 5, 10)) {
for(i in 1:30) {
cv_error[row, 2] <- my_rf_cv(k)
row <- row + 1
}
}
cv_error <- matrix(NA, nrow = 90, ncol = 2)
cv_error[, 1] <- rep(c(2, 5, 10), each = 30)
row <- 1
for(k in c(2, 5, 10)) {
for(i in 1:30) {
cv_error[row, 2] <- my_rf_cv(k)
row <- row + 1
}
}
cv_error <- matrix(NA, nrow = 90, ncol = 2)
cv_error[, 1] <- rep(c(2, 5, 10), each = 30)
row <- 1
for(k in c(2, 5, 10)) {
for(i in 1:30) {
cv_error[row, 2] <- my_rf_cv(k)
row <- row + 1
}
}
cv_error <- matrix(NA, nrow = 90, ncol = 2)
cv_error[, 1] <- rep(c(2, 5, 10), each = 30)
row <- 1
for(k in c(2, 5, 10)) {
for(i in 1:30) {
cv_error[row, 2] <- my_rf_cv(k)
row <- row + 1
}
}
cv_error <- matrix(NA, nrow = 90, ncol = 2)
cv_error[, 1] <- rep(c(2, 5, 10), each = 30)
row <- 1
for(k in c(2, 5, 10)) {
for(i in 1:30) {
cv_error[row, 2] <- my_rf_cv(k)
row <- row + 1
}
}
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
require(HaoZheng)
library(stringr)
library(ggplot2)
library(kableExtra)
library(dplyr)
data("my_gapminder")
data("my_penguins")
my_t.test(my_gapminder$lifeExp, "two.sided", 60)
my_t.test(my_gapminder$lifeExp, "less", 60)
my_t.test(my_gapminder$lifeExp, "greater", 60)
lm_1 <- my_lm(lifeExp ~ gdpPercap + continent, data = my_gapminder)
lm_1
object <- lifeExp ~ gdpPercap + continent
model <- model.frame(object, my_gapminder)
# find the explanatory variable x
exp  <- model.matrix(object, my_gapminder)
# find the response variable y
res <- model.response(model) %>% as.matrix()
my_lifeExp <- exp %*% lm_1[,1]+ lm_1[,2]
my_plot <- data.frame("actual" = my_gapminder$lifeExp, "fitted" = my_lifeExp,
"color" = my_gapminder$continent)
my_plot %>%
ggplot(aes(x = my_lifeExp, y = my_gapminder$lifeExp, color = color)) +
geom_point() +
coord_flip() +
labs(title = "Actual vs. Fitted Values", x = "fitted",
y = "actual", color = "Continent")
my_penguins_df <- my_penguins
my_penguins_df <- na.omit(my_penguins_df)
test_1 <- my_knn_cv(my_penguins_df[, 3:6], my_penguins_df$species, 1, 5)
my_penguins_df <- my_penguins
my_penguins_df <- na.omit(my_penguins_df)
#test_1 <- my_knn_cv(my_penguins_df[, 3:6], my_penguins_df$species, 1, 5)
cv_error <- matrix(NA, nrow = 90, ncol = 2)
cv_error[, 1] <- rep(c(2, 5, 10), each = 30)
row <- 1
for(k in c(2, 5, 10)) {
for(i in 1:30) {
cv_error[row, 2] <- my_rf_cv(k)
row <- row + 1
}
}
cv_error <- matrix(NA, nrow = 90, ncol = 2)
cv_error[, 1] <- rep(c(2, 5, 10), each = 30)
row <- 1
for(k in c(2, 5, 10)) {
for(i in 1:30) {
cv_error[row, 2] <- my_rf_cv(k)
row <- row + 1
}
}
devtools::check()
devtools::check()
cv_error <- matrix(NA, nrow = 90, ncol = 2)
cv_error[, 1] <- rep(c(2, 5, 10), each = 30)
row <- 1
for(k in c(2, 5, 10)) {
for(i in 1:30) {
cv_error[row, 2] <- my_rf_cv(k)
row <- row + 1
}
}
install.packages("randomForest")
require(HaoZheng)
library(randomForest)
library(stringr)
library(ggplot2)
library(kableExtra)
library(dplyr)
data("my_gapminder")
data("my_penguins")
object <- lifeExp ~ gdpPercap + continent
model <- model.frame(object, my_gapminder)
# find the explanatory variable x
exp  <- model.matrix(object, my_gapminder)
# find the response variable y
res <- model.response(model) %>% as.matrix()
cv_error <- matrix(NA, nrow = 90, ncol = 2)
cv_error[, 1] <- rep(c(2, 5, 10), each = 30)
row <- 1
for(k in c(2, 5, 10)) {
for(i in 1:30) {
cv_error[row, 2] <- my_rf_cv(k)
row <- row + 1
}
}
my_penguins_df <- my_penguins
my_penguins_df <- na.omit(my_penguins_df)
test_1 <- my_knn_cv(my_penguins_df[, 3:6], my_penguins_df$species, 1, 5)
require(HaoZheng)
library(randomForest)
library(stringr)
library(class)
library(ggplot2)
library(kableExtra)
library(dplyr)
data("my_gapminder")
data("my_penguins")
my_penguins_df <- my_penguins
my_penguins_df <- na.omit(my_penguins_df)
test_1 <- my_knn_cv(my_penguins_df[, 3:6], my_penguins_df$species, 1, 5)
cv_error <- matrix(NA, nrow = 90, ncol = 2)
cv_error[, 1] <- rep(c(2, 5, 10), each = 30)
row <- 1
for(k in c(2, 5, 10)) {
for(i in 1:30) {
cv_error[row, 2] <- my_rf_cv(k)
row <- row + 1
}
}
train <- my_penguins_df %>% select(bill_length_mm, bill_depth_mm, flipper_length_mm)
cl <- my_penguins_df$body_mass_g
result <- matrix(NA, nrow = 10, ncol = 2)
rownames(result) <- c(1:10)
for (i in 1:10) {
output <- my_knn_cv(train, cl, i, 5)
# cv misclassfication rate
result[i, 1] <- output$cv_err
# training misclassification rate
result[i, 2] <- output$te
}
output <- my_knn_cv(my_penguins_df[,3:6], my_penguins_df$species, i, 5)
#train <- my_penguins_df %>% select(bill_length_mm, bill_depth_mm, flipper_length_mm)
#cl <- my_penguins_df$body_mass_g
result <- matrix(NA, nrow = 10, ncol = 2)
rownames(result) <- c(1:10)
for (i in 1:10) {
output <- my_knn_cv(my_penguins_df[,3:6], my_penguins_df$species, i, 5)
result[i, 1] <- output$cv_err
result[i, 2] <- output$te
}
#train <- my_penguins_df %>% select(bill_length_mm, bill_depth_mm, flipper_length_mm)
#cl <- my_penguins_df$body_mass_g
result <- matrix(NA, nrow = 10, ncol = 2)
rownames(result) <- c(1:10)
for (i in 1:10) {
output <- my_knn_cv(my_penguins_df[,3:6], my_penguins_df$species, i, 5)
result[i, 1] <- output$ce
result[i, 2] <- output$te
}
result <- data.frame("Number of neighbors" = c(1:10),
"cv misclassification rate" = result[, 1],
"training misclassification rate" = result[, 2])
kable_styling(kable(result))
# TODO: my_knn function is wrong for some output
answer <- matrix(NA, nrow = 10, ncol = 2)
rownames(answer) <- c(1:10)
for (i in 1:10) {
output <- my_knn_cv(my_penguins_df[,3:6], my_penguins_df$species, i, 5)
answer[i, 1] <- output$ce
answer[i, 2] <- output$te
}
answer <- data.frame("Neighbour's number" = c(1:10),
"cv misclassification rate" = answer[, 1],
"training misclassification rate" = answer[, 2])
kable_styling(kable(answer))
cv_error <- matrix(NA, nrow = 90, ncol = 2)
cv_error[, 1] <- rep(c(2, 5, 10), each = 30)
row <- 1
for(k in c(2, 5, 10)) {
for(i in 1:30) {
cv_error[row, 2] <- my_rf_cv(k)
row <- row + 1
}
}
cv_error <- matrix(NA, nrow = 90, ncol = 2)
cv_error[, 1] <- rep(c(2, 5, 10), each = 30)
row <- 1
for(k in c(2, 5, 10)) {
for(i in 1:30) {
cv_error[row, 2] <- my_rf_cv(k)
row <- row + 1
}
}
mse_sum <- my_df %>%
group_by(k) %>%
summarise(mean = mean(mse), sd = sd(mse))
my_df <- data.frame("k" = cv_error[, 1], "mse" = cv_error[, 2])
my_df %>%
ggplot(aes(x = factor(k), y = mse, fill = factor(k))) +
geom_boxplot() +
labs(title = "MSE of K folds", x = "Number of Folds", y = "MSE",
fill = "Number of Folds")
mse_sum <- my_df %>%
group_by(k) %>%
summarise(mean = mean(mse), sd = sd(mse))
kable_styling(kable(mse_sum))
cv_error <- matrix(NA, nrow = 90, ncol = 2)
cv_error[, 1] <- rep(c(2, 5, 10), each = 30)
row <- 0
for(k in c(2, 5, 10)) {
for(i in 0:30) {
row <- row + 1
cv_error[row, 2] <- my_rf_cv(k)
}
}
cv_error <- matrix(NA, nrow = 90, ncol = 2)
cv_error[, 1] <- rep(c(2, 5, 10), each = 30)
row <- 0
for(k in c(2, 5, 10)) {
for(i in 0:29) {
row <- row + 1
cv_error[row, 2] <- my_rf_cv(k)
}
}
my_df <- data.frame("k" = cv_error[, 1], "mse" = cv_error[, 2])
my_df %>%
ggplot(aes(x = factor(k), y = mse, fill = factor(k))) +
geom_boxplot() +
labs(title = "MSE", x = "Folds number", y = "MSE",
fill = "Folds number")
cv_error <- matrix(NA, nrow = 90, ncol = 2)
cv_error[, 1] <- rep(c(2, 5, 10), each = 30)
row <- 1
for(k in c(2, 5, 10)) {
for(i in 1:30) {
cv_error[row, 2] <- my_rf_cv(k)
row <- row + 1
}
}
my_df <- data.frame("k" = cv_error[, 1], "mse" = cv_error[, 2])
my_df %>%
ggplot(aes(x = factor(k), y = mse, fill = factor(k))) +
geom_boxplot() +
labs(title = "MSE", x = "Folds number", y = "MSE",
fill = "Folds number")
cv_error <- matrix(NA, nrow = 90, ncol = 2)
cv_error[, 1] <- rep(c(2, 5, 10), each = 30)
row <- 0
for(k in c(2, 5, 10)) {
for(i in 0:29) {
row <- row + 1
cv_error[row, 2] <- my_rf_cv(k)
}
}
my_df <- data.frame("k" = cv_error[, 1], "mse" = cv_error[, 2])
my_df %>%
ggplot(aes(x = factor(k), y = mse, fill = factor(k))) +
geom_boxplot() +
labs(title = "MSE", x = "Folds number", y = "MSE",
fill = "Folds number")
cv_error <- matrix(NA, nrow = 90, ncol = 2)
cv_error[, 1] <- rep(c(2, 5, 10), each = 30)
row <- 0
for(k in c(2, 5, 10)) {
for(i in 0:29) {
row <- row + 1
cv_error[row, 2] <- my_rf_cv(k)
}
}
my_df <- data.frame("k" = cv_error[, 1], "mse" = cv_error[, 2])
my_df %>%
ggplot(aes(x = factor(k), y = mse, fill = factor(k))) +
geom_boxplot() +
labs(title = "MSE", x = "Folds number", y = "MSE",
fill = "Folds number")
mse_sum <- my_df %>%
group_by(k) %>%
summarise(mean = mean(mse), sd = sd(mse))
kable_styling(kable(mse_sum))
mse_sum <- my_df %>%
summarise(mean = mean(mse), sd = sd(mse)) %>%
group_by(k)# %>%
my_df <- data.frame("k" = cv_error[, 1], "mse" = cv_error[, 2])
my_df %>%
ggplot(aes(x = factor(k), y = mse, fill = factor(k))) +
geom_boxplot() +
labs(title = "MSE", x = "Folds number", y = "MSE",
fill = "Folds number")
data.frame("k Value" = k,
"Mean Error" = mse,
"SD Error" = se)
my_df <- data.frame("k" = cv_error[, 1], "mse" = cv_error[, 2])
my_df %>%
ggplot(aes(x = factor(k), y = mse, fill = factor(k))) +
geom_boxplot() +
labs(title = "MSE", x = "Folds number", y = "MSE",
fill = "Folds number")
data.frame("k Value" = k,
"Mean Error" = mse,
"SD Error" = se)
my_df <- data.frame("k" = cv_error[, 1], "mse" = cv_error[, 2])
my_df %>%
ggplot(aes(x = factor(k), y = mse, fill = factor(k))) +
geom_boxplot() +
labs(title = "MSE", x = "Folds number", y = "MSE",
fill = "Folds number")
data.frame("k Value" = k,
"Mean Error" = cv_err[,2],
"SD Error" = sd(mse))
my_df <- data.frame("k" = cv_error[, 1], "mse" = cv_error[, 2])
my_df %>%
ggplot(aes(x = factor(k), y = mse, fill = factor(k))) +
geom_boxplot() +
labs(title = "MSE", x = "Folds number", y = "MSE",
fill = "Folds number")
data.frame("k Value" = k,
"Mean Error" = cv_err[,2],
"SD Error" = sd(mse_sum))
my_df <- data.frame("k" = cv_error[, 1], "mse" = cv_error[, 2])
my_df %>%
ggplot(aes(x = factor(k), y = mse, fill = factor(k))) +
geom_boxplot() +
labs(title = "MSE", x = "Folds number", y = "MSE",
fill = "Folds number")
data.frame("k Value" = k,
"Mean Error" = mean(mse[i,]),
"SD Error" = sd(mse[i,]))
my_df <- data.frame("k" = cv_error[, 1], "mse" = cv_error[, 2])
my_df %>%
ggplot(aes(x = factor(k), y = mse, fill = factor(k))) +
geom_boxplot() +
labs(title = "MSE", x = "Folds number", y = "MSE",
fill = "Folds number")
mse_sum <- my_df %>%
group_by(k) %>%
summarise(mean = mean(mse), sd = sd(mse))
kable_styling(kable(mse_sum))
require(HaoZheng)
library(randomForest)
library(stringr)
library(class)
library(ggplot2)
library(kableExtra)
library(dplyr，warn.conflicts = FALSE)
require(HaoZheng)
library(randomForest)
library(stringr)
library(class)
library(ggplot2)
library(kableExtra)
library(dplyr,warn.conflicts = FALSE)
data("my_gapminder")
data("my_penguins")
options(dplyr.summarise.inform = FALSE)
cv_error <- matrix(NA, nrow = 90, ncol = 2)
cv_error[, 1] <- rep(c(2, 5, 10), each = 30)
row <- 0
for(k in c(2, 5, 10)) {
for(i in 0:29) {
row <- row + 1
cv_error[row, 2] <- my_rf_cv(k)
}
}
my_df <- data.frame("k" = cv_error[, 1], "mse" = cv_error[, 2])
my_df %>%
ggplot(aes(x = factor(k), y = mse, fill = factor(k))) +
geom_boxplot() +
labs(title = "MSE", x = "Folds number", y = "MSE",
fill = "Folds number")
mse_sum <- my_df %>%
group_by(k) %>%
summarise(mean = mean(mse), sd = sd(mse))
kable_styling(kable(mse_sum))
my_df <- data.frame("k" = cv_error[, 1], "mse" = cv_error[, 2])
my_df %>%
ggplot(aes(x = factor(k), y = mse, fill = factor(k))) +
geom_boxplot() +
labs(title = "MSE", x = "Folds number", y = "MSE")
#fill = "Folds number")
mse_sum <- my_df %>%
group_by(k) %>%
summarise(mean = mean(mse), sd = sd(mse))
kable_styling(kable(mse_sum))
"k" = cv_error[, 1]
my_df <- data.frame("mse" = cv_error[, 2], "k" = cv_error[, 1])
my_df %>%
ggplot(aes(x = factor(k), y = mse, fill = factor(k))) +
geom_boxplot() +
labs(title = "MSE", x = "Folds number", y = "MSE")
mse_sum <- my_df %>%
group_by(k) %>%
summarise(mean = mean(mse), sd = sd(mse))
kable_styling(kable(mse_sum))
my_df <- data.frame("mse" = cv_error[, 2], "k" = cv_error[, 1])
my_df %>%
ggplot(aes(x = factor(k), y = mse, fill = factor(k))) +
geom_boxplot() +
labs(title = "MSE", x = "Folds number", y = "MSE")
mse_sum <- my_df %>%
group_by(k) %>%
summarise(mean = mean(mse), sd = sd(mse))
kable_styling(kable(mse_sum))
my_df <- data.frame("mse" = cv_error[, 2], "k" = cv_error[, 1])
my_df %>%
#ggplot(aes(x = factor(k), y = mse, fill = factor(k))) +
ggplot(aes(x = factor(k), y = mse)) +
geom_boxplot() +
labs(title = "MSE", x = "Folds number", y = "MSE")
mse_sum <- my_df %>%
group_by(k) %>%
summarise(mean = mean(mse), sd = sd(mse))
kable_styling(kable(mse_sum))
devtools::check()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
require(HaoZheng)
library(randomForest)
library(stringr)
library(class)
library(ggplot2)
library(kableExtra)
library(dplyr,warn.conflicts = FALSE)
data("my_gapminder")
data("my_penguins")
my_t.test(my_gapminder$lifeExp, "two.sided", 60)
my_t.test(my_gapminder$lifeExp, "less", 60)
my_t.test(my_gapminder$lifeExp, "greater", 60)
lm_1 <- my_lm(lifeExp ~ gdpPercap + continent, data = my_gapminder)
lm_1
object <- lifeExp ~ gdpPercap + continent
model <- model.frame(object, my_gapminder)
# find the explanatory variable x
exp  <- model.matrix(object, my_gapminder)
# find the response variable y
res <- model.response(model) %>% as.matrix()
my_lifeExp <- exp %*% lm_1[,1]+ lm_1[,2]
my_plot <- data.frame("actual" = my_gapminder$lifeExp, "fitted" = my_lifeExp,
"color" = my_gapminder$continent)
my_plot %>%
ggplot(aes(x = my_lifeExp, y = my_gapminder$lifeExp, color = color)) +
geom_point() +
coord_flip() +
labs(title = "Actual vs. Fitted Values", x = "fitted",
y = "actual", color = "Continent")
# TODO: my_knn function is wrong for some output
answer <- matrix(NA, nrow = 10, ncol = 2)
rownames(answer) <- c(1:10)
for (i in 1:10) {
output <- my_knn_cv(my_penguins_df[,3:6], my_penguins_df$species, i, 5)
answer[i, 1] <- output$ce
answer[i, 2] <- output$te
}
answer <- data.frame("Neighbour's number" = c(1:10),
"cv misclassification rate" = answer[, 1],
"training misclassification rate" = answer[, 2])
kable_styling(kable(answer))
options(dplyr.summarise.inform = FALSE)
cv_error <- matrix(NA, nrow = 30 * 3, ncol = 2)
cv_error[, 1] <- rep(c(2, 5, 10), each = 30)
row <- 0
for(k in c(2, 5, 10)) {
for(i in 0:29) {
row <- row + 1
cv_error[row, 2] <- my_rf_cv(k)
}
}
my_df <- data.frame("mse" = cv_error[, 2], "k" = cv_error[, 1])
my_df %>%
ggplot(aes(x = factor(k), y = mse)) +
geom_boxplot() +
labs(title = "MSE", x = "Folds number", y = "MSE")
mse_sum <- my_df %>%
group_by(k) %>%
summarise(mean = mean(mse), sd = sd(mse))
kable_styling(kable(mse_sum))
devtools::check()
.Last.error.trace
